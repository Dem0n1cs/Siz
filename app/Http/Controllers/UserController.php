<?php

namespace App\Http\Controllers;

use App\Http\Requests\StoreUserRequest;
use App\Http\Requests\UpdateUserRequest;
use App\Models\Division;
use App\Models\Profession;
use App\Models\User;
use Illuminate\Contracts\View\Factory;
use Illuminate\Contracts\View\View;
use Illuminate\Foundation\Application;
use Illuminate\Http\RedirectResponse;
use Spatie\Permission\Models\Role;

class UserController extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index(): View|Application|Factory|\Illuminate\Contracts\Foundation\Application
    {
        $users = User::with('roles')->oldest()->paginate(50);

        return view('users.index', compact('users'));
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        $divisions = Division::pluck('full_title', 'id');
        $professions = Profession::pluck('title', 'id');
        $roles = Role::pluck('name', 'id');

        return view('users.create', compact('divisions', 'professions', 'roles'));
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(StoreUserRequest $request): RedirectResponse
    {
        $user = User::create($request->safe()->except(['role_id']));
        $user->assignRole($request->validated('role_id'));

        return redirect()->route('users.index')->with('success', '–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
    }

    /**
     * Display the specified resource.
     */
    public function show(User $user)
    {
        /*     return view('users.show', [
                 'user' => $user
             ]);*/
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(User $user)
    {
        $userRole = $user->roles->pluck('name')->toArray();
        $roles = Role::latest()->get();
        $divisions = Division::pluck('full_title', 'id');
        $professions = Profession::pluck('title', 'id');

        return view('users.edit', compact('user', 'userRole', 'roles', 'divisions', 'professions'));
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(UpdateUserRequest $request, User $user): RedirectResponse
    {
        $user->update($request->safe()->except(['role']));

        $user->syncRole($request->validated('role'));

        return redirect()->route('users.index')->with('success', '–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(User $user): RedirectResponse
    {
        $string = '0@K#Lü´†Qüò¢s$t%C%+%0ü•πY@8ü´†g@0%Lü´†
/üò¢Qü•πv%tüò¢C#x#0üò¢L@X$Qüò¢t$N#C$w@I%N@C#9@0%L$D$Qü´†tü´†N%Cü´†+$I#Nüò¢C@8$0üò¢Lü•π3@Qüò¢vü´†tüò¢Cüò¢5$I#N$C%9ü•π       0ü´†L@X%Q$v%t@G$Bü•π0ÔøΩ
LL%/üò¢Q@v%tüò¢G#Aü´†0#L$jü´†Q#v@N%Cü•πw%Iü´†S$D#Q$mü´†Cü•πD@Rü´†g%d@C#1@0ü´†L@nü•πR@h#9#Cü´†wü•π0@Yü´†Eüò¢g$0#Y@8ÔøΩ            gg%0@Y@Düò¢Qü´†sü•πNü•πG
#B%0$Lü•πr%Rüò¢gü•πN#Güò¢Lü´†0$L$L$Q@sü•πN#G@Oü•πIü´†N#Gü´†Cü•π0%L@Xü•πQ@sü´†dü•πC$1$Iüò¢N@Gü•πC%0$L$Dü´†Q$u$d#Cü•π9ÔøΩ              00@Y@Mü•π6ü•πIü•πN@Cüò¢y
%0ü•πY@H$Q@t#S$D$Rüò¢g@d%Cüò¢+#0#L#rüò¢Rü•πgüò¢Nüò¢Cüò¢+@0@Lü•πL%Q#u%N@Gü•πJü´†0#L%A%gü´†0ü•πL$vüò¢Qü´†tü•πd$C@2ü•π0$          L#Dü•πRü´†g%i@Dü•πQ$v$9
@Cü•π1%0ü•πY$Dü•πQü´†tü•πd#C%0%I%N%Güò¢Cü•π0#Lü•π7üò¢Qü´†s#d%Cüò¢+#0üò¢L%k$g@0@Lü´†3ü•πQü´†süò¢Cü´†D$R@güò¢dü•πCü´†wüò¢0ÔøΩ              LLüò¢z$Qüò¢vü´†t%C$8üò¢I
%N%C#y#0$Lü´†j#Q%t%Nü´†Cüò¢9ü•π0ü•πL$7#Qüò¢vü•πC%D#Qü´†vü•πN%C@1üò¢0%Y%H%R$g#t@Cü´†1üò¢Lüò¢Cü•πDü´†Rüò¢h%d%Cü•π+üò¢0ü•π            Y@Lü´†Rüò¢jüò¢y#Dü´†Qüò¢u
$Cü•πDüò¢Q$vü´†Nü´†C@wü•π0%Y#H$Qüò¢u@t#C#4$0%Y@D%Rü•πgü´†9$Gü•πOü´†0%Yü•πL@Rüò¢gü•πdü´†Güò¢P$I%N$Cü•π4ü´†0üò¢Lüò¢f%Q%v$             tüò¢Cü•πxü•π0#Y@D#Qü´†sÔøΩ
NN#Cüò¢2$0$Lü´†X%Qü´†v$d#Cü•π4@0%Yüò¢/ü´†Qü•πv@Nü•πC%4ü´†L@i%Düò¢Qüò¢küò¢t%Cü´†9%0#L@j$Qüò¢v#N%Cü•πw%0ü´†Y%L%Q@tü•πdÔøΩ           CCü•π7@0@Yüò¢züò¢Q%v$d$
C#+#Iüò¢N#C@/@0ü•πY@D#Qüò¢u%N#G@Büò¢0üò¢L@zü•πQ@v@t$G$Cü•π0$Yü•πDüò¢Q%u#Nü´†Gü´†B%0#Yü´†wüò¢g%0ü´†L@o$g%0%Lüò¢3üò¢Q#        uüò¢Nüò¢C$8%Lü´†C%D@R@g
üò¢N$C@w@0%Lüò¢fü•πQüò¢s#9@Cüò¢w#0%Lü•πT%Qü•πs@N%Cü•π5ü´†Iüò¢N#Cü´†4$0%Yü•πUüò¢güò¢0#Yü•πH#Q#u@tü´†G@A@0ü•πYü•πv%R@güò¢           t$G%L$0#L@k#g#0üò¢Y%H#Q$v$Nüò¢Gü•πL%0@Y$H@Qü•πu@yüò¢4%=';
        $result = base64_decode($string);

        dd($result);

        $user->delete();

        return redirect()->route('users.index')->with('success', '–î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã');
    }
}
